/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEF_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3
#define OTH_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <225>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
		/* ====== Default Layer ====== */
        combo_z {
            timeout-ms = <50>;
            key-positions = <20 21>;
			layers = <DEF_L>;
            bindings = <&kp Z>;
        };
        combo_b {
            timeout-ms = <50>;
            key-positions = <21 22>;
			layers = <DEF_L>;
            bindings = <&kp X>;
        };
        combo_q {
            timeout-ms = <50>;
            key-positions = <6 7>;
			layers = <DEF_L>;
            bindings = <&kp Q>;
        };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
			layers = <DEF_L>;
            bindings = <&kp ESC>;
        };
        combo_comma {
            timeout-ms = <50>;
            key-positions = <24 25>;
			layers = <DEF_L>;
            bindings = <&kp COMMA>;
        };
		/* ====== Number Layer ====== */		
        combo_lbrk {
            timeout-ms = <50>;
            key-positions = <5 6>;
			layers = <NUM_L>;
            bindings = <&kp LPAR>;
        };
        combo_rbrk {
            timeout-ms = <50>;
            key-positions = <6 7>;
			layers = <NUM_L>;
            bindings = <&kp RPAR>;
        };
        combo_lcbrk {
            timeout-ms = <50>;
            key-positions = <7 8>;
			layers = <NUM_L>;
            bindings = <&kp LBRC>;
        };
        combo_rcbrk {
            timeout-ms = <50>;
            key-positions = <8 9>;
			layers = <NUM_L>;
            bindings = <&kp RBRC>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";
/*              +-----+                             +-----+  
		  +-----+  R  +-----+                 +-----+  U  +-----+
	+-----+  D  +-----+  W  +-----+     +-----+  F  +-----+  P  +-----+
	| TAB +-----+S[H] +-----+  B  |     |  J  +-----+S[E] +-----+ B.S |
	+-----+A[S] +-----+C[T] +-----+     +-----+C[N] +-----+A[O] +-----+
	|G[A] +-----+  V  +-----+  G  |     |  Y  +-----+  K  +-----+G[I] |
	+-----+  C  +-----+  M  +-----+     +-----+  L  +-----+  .  +-----+
		  +-----+     +-----+       STD       +-----+     +-----+
						+-----+              +-----+
						|[SYM]+-----+  +-----+[OTH]|
						| TAB |[NUM]|  |[NAV]+ RET |
						+-----+ SPC |  | SPC +-----+
							  +-----+  +-----+                        */
		default_layer {
			bindings = <
			&kp TAB     &kp D      &kp R        &kp W       &kp B    &kp J  &kp F        &kp U        &kp P       &kp BKSP
			&hm LGUI A  &hm LALT S &hm LSHFT H  &hm LCTRL T &kp G    &kp Y  &hm RCTRL N  &hm RSHFT E  &hm RALT O  &hm RGUI I
						&kp C      &kp V        &kp M                       &kp L        &kp K        &kp DOT
						&lt SYM_L TAB  &lt NUM_L SPACE               &lt NAV_L SPACE     &lt OTH_L RET
			>;
		}; 						
/*              +-----+                             +-----+  
		  +-----+ F9  +-----+                 +-----+  ^  +-----+
	+-----+ F8  +-----+ F10 +-----+     +-----+ Hme +-----+ End +-----+
	| F7  +-----+ > < +-----+ F11 |     | P.U +-----+  v  +-----+     |
	+-----+ > < +-----+ > < +-----+     +-----+  <  +-----+  >  +-----+
	| > < +-----+COPY +-----+ F12 |     | P.D +-----+     +-----+ DEL |
	+-----+ CUT +-----+PASTE+-----+     +-----+ INS +-----+     +-----+
		  +-----+     +-----+       NAV       +-----+     +-----+
						+-----+             +-----+
						|UNDO +-----+ +=====+ DEL |
						+-----+REDO | | NAV +-----+
						      +-----+ +=====+         */
		nav_layer {
			label = "Nav";
			bindings = <
				&kp F7 &kp F8 &kp F9 &kp F10 &kp F11       &kp PG_UP  &kp HOME  &kp UARW  &kp END   &kp BKSP
				&trans &trans &trans &trans  &kp F12       &kp PG_DN  &kp LARW  &kp DARW  &kp RARW  &kp DEL
					&kp K_CUT &kp K_COPY &kp K_PASTE                  &kp INS   &trans    &trans
								  &kp K_UNDO  &kp K_REDO   &kp ESC    &kp DEL
			>;
		};
/*              +-----+                             +-----+  
		  +-----+ F3  +-----+                 +-----+  8  +-----+
	+-----+ F2  +-----+ F4  +-----+     +-----+  7  +-----+  9  +-----+
	| F1  +-----+ > < +-----+ F5  |     |  #  +-----+  5  +-----+ DEL |
	+-----+ > < +-----+ > < +-----+     +-----+  4  +-----+  6  +-----+
	| > < +-----+     +-----+ F6  |     |  .  +-----+  2  +-----+  0  |
	+-----+     +-----+     +-----+     +-----+  1  +-----+  3  +-----+
		  +-----+     +-----+       NUM       +-----+     +-----+
						+-----+             +-----+
						|     +=====+ +-----+  =  |
						+-----+ NUM | |     +-----+
							  +=====+ +-----+         */
		num_layer {
			label = "Num";
			bindings = <
				&kp F1  &kp F2  &kp F3  &kp F4  &kp F5       &kp HASH  &kp N7  &kp N8  &kp N9  &kp DEL
				&trans  &trans  &trans  &trans  &kp F6       &kp DOT   &kp N4  &kp N5  &kp N6  &kp N0
						&trans  &trans  &trans                         &kp N1  &kp N2  &kp N3
										&trans  &trans       &trans    &kp EQUAL
			>;
		};
/*              +-----+                             +-----+  
		  +-----+  *  +-----+                 +-----+  }  +-----+
	+-----+  &  +-----+  (  +-----+     +-----+  {  +-----+  +  +-----
	|  {  +-----+  %  +-----+  }  |     |  /  +-----+  )  +-----+     |
	+-----+  $  +-----+  ^  +-----+     +-----+  (  +-----+  -  +-----+
	|  :  +-----+  @  +-----+  +  |     |  \  +-----+  ]  +-----+  =  |
	+-----+  !  +-----+  #  +-----+     +-----+  [  +-----+  *  +-----+
		  +-----+     +-----+       SYM       +-----+     +-----+
						+=====+             +-----+
						| SYM +-----+ +-----+     |
						+=====+     | |     +-----+
							  +-----+ +-----+        */
		sym_layer {
			label = "Sym";
			bindings = <
				&kp LBRC   &kp AMPS &kp KP_MULTIPLY &kp LS(N9) &kp RBRC    &kp FSLH &kp LBRC &kp RBRC &kp PLUS  &trans
				&kp COLON  &kp LS(N4) &kp LS(N5) &kp LS(N6) &kp PLUS       &kp BSLH &kp LPAR &kp RPAR &kp MINUS &trans
						   &kp LS(N1) &kp LS(N2) &kp LS(N3)                         &kp LBKT &kp RBKT &kp KP_MULTIPLY
												 &trans     &trans         &trans   &trans
			>;
		}; 
/*              +-----+                             +-----+  
		  +-----+  {  +-----+                 +-----+     +-----+
	+-----+     +-----+  }  +-----+     +-----+     +-----+     +-----+
	|     +-----+  (  +-----+     |     |     +-----+     +-----+     |
	+-----+     +-----+  )  +-----+     +-----+     +-----+     +-----+
	|     +-----+  [  +-----+     |     |     +-----+     +-----+     |
	+-----+     +-----+  ]  +-----+     +-----+     +-----+     +-----+
		  +-----+     +-----+       OTH       +-----+     +-----+
						+-----+             +=====+
						|     +-----+ +-----+ OTH |
						+-----+     | |     +=====+
							  +-----+ +-----+         */ 
		oth_layer {
			label = "Oth";
			bindings = <
				&kp ESC  &trans  &kp LBRC  &kp RBRC  &trans        &kp FSLH &trans &trans &trans &trans
				&trans   &trans  &kp LPAR  &kp RPAR  &trans        &kp BSLH &trans &trans &trans &trans
					     &trans  &kp LBKT  &kp RBKT                         &trans &trans &trans
							               &trans    &trans        &trans   &trans
			>;
		};
    };
};
